--Ayishat Oguntade

-- updated for asteroid 2.0.1
-- define a circle structure that holds the
-- center point as a pair of values (xdim,ydim) and
-- the radius as a separate value.

load system io.
load system math.

structure Circle with
  data center.
  data radius.
  function circumference with () do
    return 2.0 * math@pi * this@radius.
  end
  function printcircle with () do
    io @println ("Circle: ("+tostring(this@center@0)+","+tostring(this@center@1)+") Radius: "+tostring(this@radius)).  
  end
    function area with () do
        return math@pi * (this@radius * this@radius).
    end 
end

-- instantiate circle c1
let c1 = Circle((3.5,2.0),5.5).
let c1area = c1@area().
c1 @printcircle ().
io @println ("Circumference: "+tostring(c1 @circumference ())).
io @println ("Area : "+tostring(c1 @area())).

-- instantiate circle c2
let c2 = Circle((1.0,1.0),1.0).
let c2area = c2@area().
assert (3.14 <= c2area).
assert (3.15 >= c2area).

c2 @printcircle ().
io @println ("Circumference: "+tostring(c2 @circumference none)).
io @println ("Area : "+tostring(c2 @area())).

